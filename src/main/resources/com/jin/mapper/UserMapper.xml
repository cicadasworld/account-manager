<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jin.mapper.UserMapper">
    <select id="selectById" parameterType="long" resultType="User">
        select id, name, password, create_date, update_date
        from jdbc_user
        where id = #{userId}
    </select>
    <resultMap id="userAccountResultMap" type="User" autoMapping="true">
        <id property="id" column="id"/>
        <result property="name" column="username"/>
        <!--        <result property="password" column="password"/>-->
        <result property="createDate" column="userCreateDate"/>
        <result property="updateDate" column="userUpdateDate"/>
        <collection property="accounts" ofType="Account" autoMapping="true">
            <!--            <id property="id" column="id"/>-->
            <!--            <result property="name" column="id"/>-->
            <!--            <result property="status" column="status"/>-->
            <!--            <result property="balance" column="balance"/>-->
            <!--            <result property="createDate" column="create_date"/>-->
            <!--            <result property="updateDate" column="update_date"/>-->
        </collection>
    </resultMap>
    <select id="selectUserAccountByUserId" parameterType="long" resultMap="userAccountResultMap">
        select user.id,
               user.name        as username,
               user.password,
               user.create_date as userCreateDate,
               user.update_date as userUpdateDate,
               account.id,
               account.name,
               account.status,
               account.balance,
               account.create_date,
               account.update_date
        from jdbc_user user, jdbc_account account
        where user.id = account.user_id and user.id = #{userId};
    </select>

    <!--  一对多外层不能用autoMapping属性  -->
    <!--  1. 若数据库列名和忽略大小写的属性名一致，则无需填写autoMapping=true即可实现自动映射。  -->
    <!--  2. 若其中有某个数据库列名和忽略大小写的属性名不一致，则需手动作映射，即添加id和result标签。  -->
    <!--  3. 对于嵌套collection/association标签，必须手动填写autoMapping=true  -->
    <!--  4. 对于一对多的多表查询，resultMap标签不可填写autoMapping=true  -->
    <resultMap id="userRoleResultMap" type="User">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="password" column="password"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
        <collection property="roles" ofType="Role" autoMapping="true">
            <!--            <id property="roleId" column="role_id"/>-->
            <!--            <result property="roleName" column="role_name"/>-->
            <!--            <result property="roleDesc" column="role_desc"/>-->
        </collection>
    </resultMap>

    <select id="selectUserRoleByUserId" parameterType="long" resultMap="userRoleResultMap">
        select user.id,
               user.name,
               user.password,
               user.create_date,
               user.update_date,
               role.role_id,
               role.role_name,
               role.role_desc
        from jdbc_user user, jdbc_role role, jdbc_user_role user_role
        where user.id = user_role.user_id and role.role_id = user_role.role_id and user.id = #{userId};
    </select>

    <resultMap id="userAccountLazyLoadResultMap" type="User">
        <collection property="accounts"
                    ofType="Account"
                    autoMapping="true"
                    select="com.jin.mapper.AccountMapper.selectByUserId"
                    column="id"/>
    </resultMap>

    <select id="selectUserAccountLazyLoadById" parameterType="long" resultMap="userAccountLazyLoadResultMap">
        select id,
               name,
               password,
               create_date,
               update_date
        from jdbc_user
        where id = #{userId};
    </select>
</mapper>